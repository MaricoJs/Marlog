{"version":3,"sources":["Mlog.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","Mlog","opt","window","getMlog","$this","this","$opt","$libs","$container","$useStorage","$localforageIsReady","$dbStores","$dbIndex","$dbLastLogId","$dbLastStoreIndex","$storeSize","$Mdata","$tmpLogsArr","init","isUseLocalForage","replaceConsole","then","initLocalForage","localForageInited","addTmpLog2Db","catch","addWrapper","creatWrapper","document","getElementById","div","createElement","innerHTML","id","className","body","appendChild","Promise","resolve","formatMsg","msg","type","arguments","_getDataType","getDataType","_getDataType2","dataType","iteratable","arrLength","msgObj","content","time","Date","getTime","Error","e","stack","replace","split","log","console","error","warn","info","getNewFun","_$libs$type","call","apply","concat","prototype","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","addLog","return","alert","addHtmlItem","addChildNodes","_id","lastId","reject","addToDb","splice","obj","setItem","getDbLastStoreIndex","creatDbStore","outerHTML","dbLastLogId","Math","floor","localforage","dom","path","showSelf","eval","_getDataType3","_getDataType4","makeDOm4Self","parentPathName","curPath","childEl","dateTypeSpan","dateMainSpan","setAttribute","getContent2Shown","parentNode","makeDOm4Child","depth","getAttribute","repeat","key","res","keys","join","data","toString","index","createInstance","name","addChilds","childNodesIfExist","getElementsByName","removeChild","setSize","size","ht","style","height","clear","close","display","show","getLog","ready","getItem","isNaN"],"mappings":"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","file":"../Mlog.js","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction Mlog(opt) {\n\tif (window.getMlog && typeof window.getMlog == 'function' && getMlog() instanceof Mlog) {\n\t\treturn getMlog();\n\t}\n\tvar $this = this;\n\n\tvar $opt = opt,\n\t    $libs = {};\n\tvar $container = void 0;\n\tvar $useStorage = true;\n\tvar $localforageIsReady = false;\n\tvar $dbStores = [];\n\tvar $dbIndex = null;\n\tvar $dbLastLogId = 0;\n\tvar $dbLastStoreIndex = 0;\n\tvar $storeSize = 2000;\n\tvar $Mdata = {};\n\tvar $tmpLogsArr = [];\n\t$this.init = function () {\n\t\tif (isUseLocalForage()) {\n\t\t\treplaceConsole().then(initLocalForage).then(localForageInited).then(addTmpLog2Db);\n\t\t} else {\n\t\t\treplaceConsole().then(initLocalForage).then(localForageInited).catch(addTmpLog2Db);\n\t\t}\n\t\taddWrapper(creatWrapper()).then(function () {\n\t\t\t$container = document.getElementById(\"mlogMain\");\n\t\t});\n\t};\n\n\t//创建Mlog容器\n\t//Create Mlog wrapper \n\tvar creatWrapper = function creatWrapper() {\n\t\tvar html = '\\t\\t\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t#mlogWrapper {\\n\\t\\t\\t\\tposition: fixed;\\n\\t\\t\\t\\tdisplay: none;\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\theight: 100%;\\n\\t\\t\\t\\tbackground: rgba(30, 30, 30, .95);\\n\\t\\t\\t\\tcolor: #f3f3f3;\\n\\t\\t\\t\\tline-height: 1.5rem;\\n\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t\\tz-index: 9999;\\n\\t\\t\\t\\tbottom: 0;\\n\\t\\t\\t\\tmargin: 0 auto;\\n\\t\\t\\t\\t-webkit-touch-callout: none;\\n\\t\\t\\t\\t-webkit-user-select: none;\\n\\t\\t\\t\\t-khtml-user-select: none;\\n\\t\\t\\t\\t-moz-user-select: none;\\n\\t\\t\\t\\t-ms-user-select: none;\\n\\t\\t\\t\\tuser-select: none;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogForm {\\n\\t\\t\\t\\tposition:fixed;\\n\\t\\t\\t\\tbottom:0;\\n\\t\\t\\t\\tdisplay: block;\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\theight: 3rem;\\n\\t\\t\\t\\t/*border: 1px solid rgba(250,250,250,.5);*/\\n\\t\\t\\t\\tbackground: #444;\\t\\t\\t\\t\\n\\t\\t\\t\\tbox-sizing: border-box;\\n\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t\\tmargin: 0;\\n\\t\\t\\t\\tz-index:99999;/**/\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogFormInput {\\n\\t\\t\\t\\tbackground: none;\\n\\t\\t\\t\\tborder: 0;\\n\\t\\t\\t\\toutline: 0;\\n\\t\\t\\t\\twidth: 90%;\\n\\t\\t\\t\\theight: 3rem;\\n\\t\\t\\t\\tline-height: 1.4rem;\\n\\t\\t\\t\\theight: auto;\\n\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t\\tcolor:#eee;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogFormBt {\\n\\t\\t\\t\\t/* display: inline-block; */\\n\\t\\t\\t\\twidth: 8%;\\n\\t\\t\\t\\ttext-align: center;\\n\\t\\t\\t\\tline-height: 3rem;\\n\\t\\t\\t\\tfloat: right;\\n\\t\\t\\t\\tbackground: rgba(30, 30, 30, .95);\\n\\t\\t\\t\\tcolor: #fff;\\n\\t\\t\\t\\tborder-left: 1px solid #fff;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogMain {\\n\\t\\t\\t\\theight: calc(100% - 6rem);\\n\\t\\t\\t\\toverflow-y: scroll;\\n\\t\\t\\t\\toverflow-wrap: break-word;\\n\\t\\t\\t\\toverflow-x: hidden;\\n\\t\\t\\t\\tpadding: 1rem;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogHeader {\\n\\t\\t\\t\\theight: 2rem;\\n\\t\\t\\t\\tline-height: 2rem;\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\ttext-align: right;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper #mlogHeader span {\\n\\t\\t\\t\\tpadding: 0 1rem;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper .mlog-item {\\n\\t\\t\\t\\tline-height: 2rem;\\n\\t\\t\\t\\tmin-height: 18px;\\n\\t\\t\\t\\t/*\\n\\t\\t\\t\\tline-height: 2.3rem;\\n\\t\\t\\t\\tmin-height: 18px;\\n\\t\\t\\t\\tborder-bottom: 1px dashed rgba(255, 255, 255, .2);\\n\\t\\t\\t\\t*/\\n\\t\\t\\t}\\n\\n\\t\\t\\t.mlogWrapper .mlog-item-type {\\n\\t\\t\\t\\tcolor: #679;\\n\\t\\t\\t\\tpadding-left: 1rem;\\n\\t\\t\\t}\\n\\t\\t\\t.mlogWrapper .tableMark{\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tcolor: rgba(250, 250, 250, .05)\\n\\t\\t\\t}\\n\\t\\t\\t.mlogWrapper .isOpenedMark{\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t}\\n\\t\\t\\t.isOpenedMark.avalable{\\n\\t\\t\\t\\tvisibility: hidden;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<div class=\"\" id=\"mlogHeader\">\\n\\t\\t\\t<span id=\"mlogMini\" onclick=\"getMlog().setSize(\\'min\\');\"> - </span>\\n\\t\\t\\t<span id=\"mlogHalf\"  onclick=\"getMlog().setSize(\\'half\\');\"> = </span>\\n\\t\\t\\t<span id=\"mlogMax\"  onclick=\"getMlog().setSize(\\'max\\');\"> + </span>\\n\\t\\t\\t<span id=\"mlogClear\"  onclick=\"getMlog().clear();\"> c </span>\\n\\t\\t\\t<span id=\"mlogClose\"  onclick=\"getMlog().close();\"> x </span>\\n\\t\\t</div>\\n\\t\\t<div class=\"\" id=\"mlogMain\">\\n\\t\\t\\t<p class=\"tc lh05\" id=\"containerTitle\"></p>\\n\\t\\t</div>\\n\\t\\t<div class=\"form\" id=\"mlogForm\">\\n\\t\\t\\t<textarea rows=\"2\" id=\"mlogFormInput\"> </textarea>\\n\\t\\t\\t<span id=\"mlogFormBt\"> &gt; </span>\\n\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t';\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = html;\n\t\tdiv.id = 'mlogWrapper';\n\t\tdiv.className = 'mlogWrapper';\n\t\treturn div;\n\t};\n\tvar addWrapper = function addWrapper(div) {\n\t\tdocument.body.appendChild(div);\n\t\t$container = document.getElementById(\"mlogMain\");\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(true);\n\t\t});\n\t};\n\n\t//记录单条信息的所有内容和属性\n\tvar formatMsg = function formatMsg(msg) {\n\t\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar _getDataType = getDataType(msg),\n\t\t    _getDataType2 = _slicedToArray(_getDataType, 2),\n\t\t    dataType = _getDataType2[0],\n\t\t    iteratable = _getDataType2[1];\n\n\t\tvar arrLength = 'arrLength';\n\t\tif (dataType === 'Array') {\n\t\t\tarrLength = msg.length;\n\t\t}\n\n\t\tvar msgObj = {\n\t\t\ttype: type,\n\t\t\tcontent: msg,\n\t\t\tdataType: dataType,\n\t\t\ttime: new Date().getTime(),\n\t\t\titeratable: iteratable\n\t\t};\n\t\tif (arrLength !== 'arrLength') {\n\t\t\tmsgObj.arrLength = arrLength;\n\t\t}\n\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch (e) {\n\t\t\tmsgObj.stack = e.stack.replace(/Error\\n/).split(/\\n/)[1].replace(/^\\s+|\\s+$/, \"\");\n\t\t\t//msgObj.stack = e.stack\n\t\t}\n\t\treturn msgObj;\n\t};\n\n\tvar replaceConsole = function replaceConsole() {\n\t\t$libs.log = console.log;\n\t\t$libs.error = console.error;\n\t\t$libs.warn = console.warn;\n\t\t$libs.info = console.info;\n\n\t\tconsole.log = getNewFun('log'); // addLog(formatMsg(arguments, 'log'))\n\t\tconsole.error = getNewFun('error');\n\t\tconsole.warn = getNewFun('warn');\n\t\tconsole.info = getNewFun('info');\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(true);\n\t\t});\n\t};\n\tvar getNewFun = function getNewFun(type) {\n\t\treturn function () {\n\t\t\t// $libs[type](...arguments)\n\t\t\tif (typeof $libs[type] === 'function') {\n\t\t\t\tif (arguments.length > 0) {\n\t\t\t\t\tvar _$libs$type;\n\n\t\t\t\t\t(_$libs$type = $libs[type]).call.apply(_$libs$type, [null].concat(Array.prototype.slice.call(arguments)));\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = arguments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar msg = _step.value;\n\n\t\t\t\t\t\t\taddLog(formatMsg(msg, type));\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//nothing to log\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(type + ' is not a function');\n\t\t\t}\n\t\t};\n\t};\n\n\tvar addHtmlItem = function addHtmlItem(msg) {\n\t\t//alert(JSON.stringify(msg))\n\t\treturn addChildNodes(document.getElementById(\"containerTitle\"), 'getMlog().getLog(' + msg._id + ')', 'content', true);\n\t\t/*\n  \t\t// Scroll to last element, if autoScroll option is set.\n  \t\tif($this.opt.autoScroll) {\n  \t\t\t$this.logEl.scrollTop = $this.logEl.scrollHeight - $this.logEl.clientHeight;\n  \t\t}*/\n\t};\n\n\tvar localForageInited = function localForageInited(lastId) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tresolve(lastId);\n\t\t});\n\t};\n\n\tvar addTmpLog2Db = function addTmpLog2Db(lastId) {\n\t\tif ($tmpLogsArr.length) {\n\t\t\tfor (var i = 0; i < $tmpLogsArr.length; i++) {\n\t\t\t\t$tmpLogsArr[i]._id = lastId + i + 1;\n\t\t\t\taddToDb($tmpLogsArr[i]);\n\t\t\t}\n\t\t}\n\t\t$tmpLogsArr.splice(0, $tmpLogsArr.length); //清空数组\n\t};\n\n\tvar addLog = function addLog(msgObj) {\n\t\tif (isUseLocalForage() && !$localforageIsReady) {\n\t\t\t$tmpLogsArr.push(msgObj);\n\t\t} else {\n\t\t\taddToDb(msgObj);\n\t\t}\n\t};\n\tvar addToDb = function addToDb(obj) {\n\t\t$dbLastLogId++;\n\t\tobj._id = $dbLastLogId;\n\t\t$Mdata['log_' + obj._id] = obj;\n\t\taddHtmlItem(obj);\n\t\tif ($localforageIsReady) {\n\t\t\t$dbIndex.setItem('lastLogId', $dbLastLogId);\n\t\t\tif (getDbLastStoreIndex($dbLastLogId) - $dbLastStoreIndex === 1) {\n\t\t\t\t$dbLastStoreIndex = getDbLastStoreIndex($dbLastLogId);\n\t\t\t\tcreatDbStore($dbLastStoreIndex);\n\t\t\t}\n\t\t\tif (obj.content == '[object HTMLHeadElement]') obj.content = obj.content.outerHTML;\n\t\t\t$dbStores[$dbLastStoreIndex].setItem('log_' + obj._id, obj);\n\t\t}\n\t};\n\n\tvar getDbLastStoreIndex = function getDbLastStoreIndex(dbLastLogId) {\n\t\treturn Math.floor(dbLastLogId / $storeSize);\n\t};\n\tvar isUseLocalForage = function isUseLocalForage() {\n\t\treturn !(window.localforage === undefined) && $useStorage === true;\n\t};\n\tvar addChildNodes = function addChildNodes(dom, log, path) /*是否显示自身而非子项*/{\n\t\tvar showSelf = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n\t\tvar msg = eval(log)[path];\n\n\t\tvar _getDataType3 = getDataType(msg),\n\t\t    _getDataType4 = _slicedToArray(_getDataType3, 2),\n\t\t    dataType = _getDataType4[0],\n\t\t    iteratable = _getDataType4[1];\n\n\t\tvar makeDOm4Self = function makeDOm4Self(parentPathName, curPath) {\n\t\t\tvar childEl = document.createElement('div');\n\t\t\tvar dateTypeSpan = document.createElement('span');\n\t\t\tvar dateMainSpan = document.createElement('span');\n\t\t\tdateTypeSpan.className = 'mlog-item-type';\n\t\t\tdateTypeSpan.innerHTML = dataType;\n\t\t\tdateMainSpan.className = 'mlog-item-name';\n\t\t\tdateMainSpan.setAttribute('onclick', 'getMlog().addChilds(this);');\n\t\t\tchildEl.setAttribute('name', parentPathName);\n\t\t\tchildEl.setAttribute('path', curPath);\n\t\t\tchildEl.appendChild(dateMainSpan);\n\t\t\tchildEl.appendChild(dateTypeSpan);\n\t\t\tchildEl.className = \"mlog-item\";\n\t\t\tif (iteratable) {\n\t\t\t\tdateMainSpan.innerHTML = '<i class=\"isOpenedMark\" name=\"' + parentPathName + '_openedMark_' + curPath + '\">\\u25B8</i>' + getContent2Shown(msg);\n\t\t\t} else {\n\t\t\t\tdateMainSpan.innerHTML = '<i class=\"isOpenedMark avalable\"  name=\"' + parentPathName + '_openedMark_' + curPath + '\">\\u25B8</i> ' + getContent2Shown(msg);\n\t\t\t}\n\n\t\t\tdom.parentNode.appendChild(childEl);\n\t\t\tdom.parentNode.setAttribute('depth', 0);\n\t\t};\n\t\tvar makeDOm4Child = function makeDOm4Child(parentPathName, curPath) {\n\t\t\tvar depth = dom.parentNode.getAttribute('depth') * 1;\n\t\t\tvar childEl = document.createElement('div');\n\t\t\tvar dateTypeSpan = document.createElement('span');\n\t\t\tvar dateMainSpan = document.createElement('span');\n\t\t\tdateTypeSpan.className = 'mlog-item-type';\n\t\t\tdateTypeSpan.innerHTML = getDataType(msg[curPath])[0];\n\t\t\tdateMainSpan.className = 'mlog-item-name';\n\t\t\tdateMainSpan.setAttribute('onclick', 'getMlog().addChilds(this);');\n\t\t\tchildEl.setAttribute('name', parentPathName);\n\t\t\tchildEl.setAttribute('path', curPath);\n\t\t\tchildEl.setAttribute('depth', depth + 1);\n\t\t\tchildEl.appendChild(dateMainSpan);\n\t\t\tchildEl.appendChild(dateTypeSpan);\n\t\t\tchildEl.className = \"mlog-item\";\n\t\t\tif (getDataType(msg[curPath])[1]) {\n\t\t\t\tdateMainSpan.innerHTML = '<i class=\"tableMark\">' + \"├─\".repeat(depth + 1) + ' </i>  <i class=\"isOpenedMark\" name=\"' + parentPathName + '_openedMark_' + curPath + '\">\\u25B8</i>  ' + curPath + ': ' + getContent2Shown(msg[curPath]);\n\t\t\t} else {\n\t\t\t\tdateMainSpan.innerHTML = '<i class=\"tableMark\">' + \"├─\".repeat(depth + 1) + ' </i>  <i class=\"isOpenedMark avalable\" name=\"' + parentPathName + '_openedMark_' + curPath + '\" >\\u25B8</i>  ' + curPath + ': ' + getContent2Shown(msg[curPath]);\n\t\t\t}\n\t\t\tdom.parentNode.appendChild(childEl);\n\t\t};\n\n\t\tif (showSelf === true) {\n\t\t\tmakeDOm4Self(log, path);\n\t\t} else {\n\t\t\tif (iteratable) {\n\t\t\t\tfor (var key in msg) {\n\t\t\t\t\tmakeDOm4Child(log + '[\\'' + path + '\\']', key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tvar getContent2Shown = function getContent2Shown(msg) {\n\t\tvar dateType = getDataType(msg);\n\t\tvar res = null;\n\t\t//\talert(dateType[0])\n\t\tswitch (dateType[0]) {\n\t\t\tcase 'Object':\n\t\t\t\tres = ' { ' + Object.keys(msg).join(', ') + ' }';\n\t\t\t\tbreak;\n\t\t\tcase 'Array':\n\t\t\t\tres = ' [ length: ' + msg.length + ' ]';\n\t\t\t\tbreak;\n\t\t\tcase 'String':\n\t\t\t\tres = ' \"' + msg + '\"';\n\t\t\t\tbreak;\n\t\t\tcase 'Number':\n\t\t\t\tres = ' ' + msg;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t};\n\n\tvar getDataType = function getDataType(data) {\n\t\tvar dataType = void 0,\n\t\t    iteratable = false;\n\t\tif (Object.prototype.toString.call(data) == '[object Object]') {\n\t\t\tdataType = 'Object';\n\t\t\titeratable = true;\n\t\t} else if (Object.prototype.toString.call(data) == '[object Array]') {\n\t\t\tdataType = 'Array';\n\t\t\titeratable = true;\n\t\t} else if (Object.prototype.toString.call(data) == '[object String]') {\n\t\t\tdataType = 'String';\n\t\t} else if (Object.prototype.toString.call(data) == '[object Number]') {\n\t\t\tdataType = 'Number';\n\t\t}\n\t\treturn [dataType, iteratable];\n\t};\n\tvar creatDbStore = function creatDbStore(index) {\n\t\t$dbStores[index] = localforage.createInstance({\n\t\t\tname: 'store' + index\n\t\t});\n\t};\n\n\t$this.addChilds = function (dom) {\n\t\tvar log = dom.parentNode.getAttribute('name');\n\t\tvar path = dom.parentNode.getAttribute('path');\n\t\tvar childNodesIfExist = document.getElementsByName(log + '[\\'' + path + '\\']');\n\t\t//alert(`${log}_openedMark_${path}`)\n\t\t//alert(document.getElementsByName(`${log}_openedMark_${path}`).length)\n\t\tif (childNodesIfExist.length > 0) {\n\t\t\tfor (var i = childNodesIfExist.length - 1; i >= 0; i--) {\n\t\t\t\tchildNodesIfExist[i].parentNode.removeChild(childNodesIfExist[i]);\n\t\t\t}\n\t\t\tdocument.getElementsByName(log + '_openedMark_' + path)[0].innerHTML = \"▸\";\n\t\t\treturn 0;\n\t\t} else {\n\t\t\taddChildNodes(dom, log, path);\n\t\t\tdocument.getElementsByName(log + '_openedMark_' + path)[0].innerHTML = \"▾\";\n\t\t\treturn 1;\n\t\t}\n\t};\n\tvar setSize = function setSize(size) {\n\t\tvar ht = '';\n\t\tswitch (size) {\n\t\t\tcase 'min':\n\t\t\t\tht = '5rem';\n\t\t\t\tbreak;\n\t\t\tcase 'max':\n\t\t\t\tht = '100vh';\n\t\t\t\tbreak;\n\t\t\tcase 'half':\n\t\t\t\tht = '50vh';\n\t\t\t\tbreak;\n\t\t\tcase 'hide':\n\t\t\t\tht = '0';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdocument.getElementById(\"mlogWrapper\").style.height = ht;\n\t};\n\tvar clear = function clear() {\n\t\tdocument.getElementById(\"mlogMain\").innerHTML = '<p class=\"tc lh05\" id=\"containerTitle\"></p>';\n\t};\n\tvar close = function close() {\n\t\tdocument.getElementById(\"mlogWrapper\").style.display = 'none';\n\t};\n\tvar show = function show() {\n\t\tdocument.getElementById(\"mlogWrapper\").style.display = 'block';\n\t};\n\t$this.show = function () {\n\t\treturn show();\n\t};\n\t$this.close = function () {\n\t\treturn close();\n\t};\n\t$this.clear = function () {\n\t\treturn clear();\n\t};\n\t$this.setSize = function (size) {\n\t\treturn setSize(size);\n\t};\n\t$this.getLog = function (id) {\n\t\treturn $Mdata['log_' + id];\n\t};\n\n\twindow.getMlog = function () {\n\t\treturn $this;\n\t};\n\n\tvar initLocalForage = function initLocalForage() {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!isUseLocalForage()) {\n\t\t\t\t//not surport localForage\t\t\n\t\t\t\t$dbLastLogId = 0;\n\t\t\t\treject($dbLastLogId);\n\t\t\t} else {\n\n\t\t\t\tlocalforage.ready(function () {\n\t\t\t\t\t//creat db stored all indexes\n\t\t\t\t\t$dbIndex = localforage.createInstance({\n\t\t\t\t\t\tname: 'index'\n\t\t\t\t\t});\n\t\t\t\t\t$dbIndex.getItem('lastLogId').then(function (lastId) {\n\n\t\t\t\t\t\tif (isNaN(lastId)) {\n\t\t\t\t\t\t\t$dbLastLogId = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$dbLastLogId = lastId + 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t$dbLastStoreIndex = getDbLastStoreIndex($dbLastLogId);\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t// create stores for logs by group\n\t\t\t\t\t\t\tcreatDbStore(i);\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} while (i <= $dbLastStoreIndex);\n\t\t\t\t\t\ti = null;\n\t\t\t\t\t\t$localforageIsReady = true;\n\t\t\t\t\t\tresolve($dbLastLogId);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t$this.init();\n}"]}